# Generated by Django 2.1 on 2018-08-15 17:52

from django.conf import settings
from django.db import migrations, models
from django.contrib.auth import get_user_model
import django.db.models.deletion


def make_users(apps, schema_editor):
    # User = apps.get_model(settings.AUTH_USER_MODEL)
    from django.contrib.auth.models import User
    SlackUser = apps.get_model('crossbot', 'SlackUser')

    for model in ['crosswordtime', 'minicrosswordtime', 'easysudokutime']:
        for item in apps.get_model('crossbot', model).objects.all():
            if not User.objects.filter(username=item.userid):
                user = User.objects.create_user(username=item.userid)
                SlackUser(user_id=user.id, slackid=item.userid, slackname='').save()

def fill_queries(apps, schema_editor):
    SlackUser = apps.get_model('crossbot', 'SlackUser')
    Temp = apps.get_model('crossbot', 'temp')
    Model = apps.get_model('crossbot', 'queryshorthands')
    for it in Model.objects.all():
        Temp(
            user = SlackUser.objects.get(pk=it.userid).user,
            name = it.name,
            command = it.command,
            timestamp = it.timestamp,
        ).save()


def make_new_table(model_name):

    def fill(apps, schema_editor):
        SlackUser = apps.get_model('crossbot', 'SlackUser')
        Temp = apps.get_model('crossbot', 'temp')
        Model = apps.get_model('crossbot', model_name)
        for it in Model.objects.all():
            Temp(
                user = SlackUser.objects.get(pk=it.userid).user,
                seconds = it.seconds,
                date = it.date,
                timestamp = it.timestamp,
            ).save()

    return [
        migrations.CreateModel(
            name='temp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True, on_delete=models.SET_NULL)),
                ('seconds', models.IntegerField()),
                ('date', models.DateField()),
                ('timestamp', models.DateTimeField(null=True)),
            ]
        ),
        migrations.RunPython(fill),
        migrations.DeleteModel(model_name),
        migrations.RenameModel('temp', model_name),
    ]


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('crossbot', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SlackUser',
            fields=[
                ('slackid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('slackname', models.CharField(max_length=100)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RunPython(make_users)
    ] + (
        make_new_table('crosswordtime') + make_new_table('minicrosswordtime') + make_new_table('easysudokutime')
    ) + [
        migrations.CreateModel(
            name='temp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True, on_delete=models.SET_NULL)),
                ('name', models.CharField(max_length=100)),
                ('command', models.TextField()),
                ('timestamp', models.DateTimeField(null=True)),
            ]
        ),
        migrations.RunPython(fill_queries),
        migrations.DeleteModel('queryshorthands'),
        migrations.RenameModel('temp', 'queryshorthands'),
    ]
